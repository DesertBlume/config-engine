Step 4: Create the base DIT (Directory Information Tree)
ðŸ”§ File: /root/base.ldif
ldif
Copy
Edit
dn: dc=exampleMN,dc=lab
objectClass: top
objectClass: domain
dc: exampleMN
ðŸ§  Explanation:
This is the root of your LDAP directory.

dc=exampleMN,dc=lab matches the base DN you specified during setup.

You're creating a domain node with object classes top and domain.

ðŸ”§ To apply:
bash
Copy
Edit
ldapadd -x -D "cn=Directory Manager" -W -H ldap://localhost -f /root/base.ldif
-x: Simple bind (not SASL)

-D: The bind DN (Directory Manager)

-W: Prompts for password

-H: Specifies LDAP URI

-f: Path to LDIF file

Step 5: Add Organizational Units (OUs)
ðŸ”§ File: /root/ou.ldif
ldif
Copy
Edit
dn: ou=accounts,dc=exampleMN,dc=lab
objectClass: top
objectClass: organizationalUnit
ou: accounts

dn: ou=groups,dc=exampleMN,dc=lab
objectClass: top
objectClass: organizationalUnit
ou: groups

dn: ou=hosts,dc=exampleMN,dc=lab
objectClass: top
objectClass: organizationalUnit
ou: hosts
ðŸ§  Explanation:
accounts: container for user entries.

groups: container for group entries.

hosts: container for devices youâ€™ll define later (e.g. happy, peachy).

ðŸ”§ To apply:
bash
Copy
Edit
ldapadd -x -D "cn=Directory Manager" -W -H ldap://localhost -f /root/ou.ldif
Step 6: Add users
ðŸ”§ File: /root/users.ldif
Example for linuser1:

ldif
Copy
Edit
dn: uid=linuser1,ou=accounts,dc=exampleMN,dc=lab
objectClass: inetOrgPerson
objectClass: posixAccount
cn: linuser1
sn: User
uid: linuser1
uidNumber: 1001
gidNumber: 1000
homeDirectory: /home/linuser1
loginShell: /bin/bash
mail: linuser1@exampleMN.lab
mail: linux.user1@exampleMN.lab
Repeat similarly for linuser2 and your Algonquin ID.

ðŸ§  Explanation:
inetOrgPerson: adds general person-related fields (cn, sn, mail).

posixAccount: required for Linux-style users (UID, shell, home dir, etc).

mail: you assign two mail addresses for linuser1.

ðŸ”§ Apply with:
bash
Copy
Edit
ldapadd -x -D "cn=Directory Manager" -W -H ldap://localhost -f /root/users.ldif
Step 7: Create the user group
ðŸ”§ File: /root/group.ldif
ldif
Copy
Edit
dn: cn=users,ou=groups,dc=exampleMN,dc=lab
objectClass: posixGroup
cn: users
gidNumber: 1000
memberUid: linuser1
memberUid: linuser2
memberUid: haja0013  # Replace with your Algonquin ID
ðŸ§  Explanation:
Youâ€™re creating a Linux-style group using posixGroup.

memberUid entries link users to this group.

ðŸ”§ Apply:
bash
Copy
Edit
ldapadd -x -D "cn=Directory Manager" -W -H ldap://localhost -f /root/group.ldif
Step 8: Add host entries (happy and peachy)
ðŸ”§ File: /root/hosts.ldif
ldif
Copy
Edit
dn: cn=happy.exampleMN.lab,ou=hosts,dc=exampleMN,dc=lab
objectClass: device
objectClass: ipHost
cn: happy.exampleMN.lab
ipHostNumber: 172.16.32.200
description: Happy server

dn: cn=peachy.exampleMN.lab,ou=hosts,dc=exampleMN,dc=lab
objectClass: device
objectClass: ipHost
cn: peachy.exampleMN.lab
ipHostNumber: 172.16.32.201
description: Peachy server
ðŸ§  Explanation:
device = structural class.

ipHost = allows you to assign IP addresses.

These entries will be used for NSS-based hostname resolution.

ðŸ”§ Apply:
bash
Copy
Edit
ldapadd -x -D "cn=Directory Manager" -W -H ldap://localhost -f /root/hosts.ldif
Step 9: Test your server
ðŸ”§ Command:
bash
Copy
Edit
ldapsearch -x -H ldap://localhost -b "dc=exampleMN,dc=lab"
ðŸ§  Explanation:
Ensures the server is responding and your entries exist.

You should see your DIT, users, groups, and hosts.

=== roles/bind-master/templates/fwd.zone.j2 ===
$TTL 86400
@   IN SOA {{ name_server }}1.{{ bind_domain }}. dnsadmin.{{ bind_domain }}. (
        {{ bind_serial }}
        3600
        1800
        604800
        86400
)

    IN NS {{ name_server }}1.{{ bind_domain }}.
    IN NS {{ name_server }}2.{{ bind_domain }}.

{% for record in bind_a_records %}
{{ record.name }} IN A {{ record.ip }}
{% endfor %}

=== roles/bind-master/templates/rev.172.16.j2 ===
$TTL 86400
@   IN SOA {{ name_server }}1.{{ bind_domain }}. dnsadmin.{{ bind_domain }}. (
        {{ bind_serial }}
        3600
        1800
        604800
        86400
)

    IN NS {{ name_server }}1.{{ bind_domain }}.
    IN NS {{ name_server }}2.{{ bind_domain }}.

{% for record in bind_ptr %}
{{ record.octet }} IN PTR {{ record.fqdn }}
{% endfor %}

=== roles/bind-master/templates/named.conf.j2 ===
options {
    directory "/var/named";
    listen-on { {% for ip in bind_listen_ipv4 %} {{ ip }}; {% endfor %} };
    listen-on-v6 { none; };
    allow-query { any; };
    recursion yes;
    allow-transfer { {{ client_ip }}; };
    dnssec-validation yes;
    auth-nxdomain no;
    pid-file "/var/run/named/named.pid";

};

zone "{{ bind_domain }}" IN {
    type master;
    file "fwd.{{ bind_domain }}";
    allow-transfer { {{ client_ip }}; };
    also-notify { {{ client_ip }}; };     // notify slave when zone changes
    notify yes;
    allow-update { none; };

};

zone "16.172.in-addr.arpa" IN {
    type master;
    file "rev.16.172";
    allow-transfer { {{ client_ip }}; };
    also-notify { {{ client_ip }}; };     // notify slave when zone changes
    notify yes;
    allow-update { none; };
};

=== roles/bind-master/tasks/main.yml ===
- name: Ensure bind directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ bind_uid }}"
    group: "{{ bind_gid }}"
    mode: '0750'
  loop:
    - "{{ bind_dir }}/config"
    - "{{ bind_dir }}/zones"

- name: Deploy named.conf
  ansible.builtin.template:
    src: named.conf.j2
    dest: "{{ bind_dir }}/config/named.conf"
    owner: "{{ bind_uid }}"
    group: "{{ bind_gid }}"
    mode: '0640'

- name: Download bind9 image from host machine
  ansible.builtin.get_url:
    url: "http://{{ host_machine_ip }}:8080/bind9.tar"
    dest: /root/bind9.tar
    mode: '0640'

- name: Load bind9 image into Podman
  ansible.builtin.command: podman load -i /root/bind9.tar
  register: podman_load
  changed_when: "'Loaded image' in podman_load.stdout"

- name: Deploy forward zone file
  template:
    src: "fwd.zone.j2"
    dest: "{{ bind_dir }}/zones/fwd.{{ bind_domain }}"
    owner: "{{ bind_uid }}"
    group: "{{ bind_gid }}"
    mode: '0640'

- name: Deploy reverse zone file
  template:
    src: "rev.16.172.j2"
    dest: "{{ bind_dir }}/zones/rev.16.172"
    owner: "{{ bind_uid }}"
    group: "{{ bind_gid }}"
    mode: '0640'

- name: Remove existing bind-master container (if exists)
  containers.podman.podman_container:
    name: bind-master
    state: absent

- name: Run bind-master container
  containers.podman.podman_container:
    name: bind-master
    image: "{{ bind_image }}"
    state: started
    recreate: true
    hostname: bind-master
    network: host
    volume:
      - /opt/named/config/named.conf:/etc/named.conf:Z
      - /opt/named/zones:/var/named:Z
    command:
      - -c
      - /etc/named.conf
      - -g
      - -u
      - bind


